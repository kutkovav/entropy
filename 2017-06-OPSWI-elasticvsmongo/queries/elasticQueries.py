query1 = {"query_string": {
    "query": "smallestVersion"
}}

query2 = {"query_string": {
    "query": "classes.methods.header: smallestVersion AND "
             "classes.name: DiscoveryNodes.class"
}}

query3 = {"query_string": {
    "query": "classes.methods.header: smallestVersion AND "
             "classes.name: DiscoveryNodes.class AND "
             "package: org.elasticsearch.cluster.node"
}}

query4 = {"query_string": {
    "query": "toString"
}}

query5 = {"query_string": {
    "query": "classes.methods.header: toString AND "
             "classes.name: ProxyDiagnostics.class"
}}

query6 = {"query_string": {
    "query": "classes.methods.header: toString AND "
             "classes.name: ProxyDiagnostics.class AND "
             "package: org.apache.tools.ant.util.java15"
}}

query7 = {"query_string": {
    "query": "classes.name: DiscoveryNode.class AND "
             "classes.name: DiscoveryNodes.class AND "
             "classes.name: DiscoveryNodeService.class AND "
             "classes.name: DiscoveryNodeFilters.class AND "

             "classes.methods.header: localNode AND "
             "classes.methods.header: clientNode AND "
             "classes.methods.header: masterNode AND "
             "classes.methods.header: address AND "
             "classes.methods.header: getNodes AND "
             "classes.methods.header: getMasterNodes AND "
             "classes.methods.header: getLocalNode AND "
             "classes.methods.header: readFrom AND "
             "classes.methods.header: addCustomAttributeProvider AND "
             "classes.methods.header: buildAttributes AND "
             "classes.methods.header: buildFromSettings AND "
             "classes.methods.header: buildFromKeyValue AND "
             "classes.methods.header: match AND "
             "classes.methods.header: toString"
}}

query8 = {"query_string": {
    "query": "classes.name: ArrayUtils.class AND "
             "classes.name: BitField.class AND "
             "classes.name: BooleanUtils.class AND "
             "classes.name: CharUtils.class AND "
             "classes.name: ClassUtils.class AND "
             "classes.name: IntHashMap.class AND "
             "classes.name: LocaleUtils.class AND "
             "classes.name: NotImplementedException.class AND "

             "classes.methods.header: toString AND "
             "classes.methods.header: hashCode AND "
             "classes.methods.header: toMap AND "
             "classes.methods.header: clone AND "
             "classes.methods.header: subarray AND "
             "classes.methods.header: isSameLength AND "
             "classes.methods.header: indexOf AND "
             "classes.methods.header: toPrimitive AND "
             "classes.methods.header: getValue AND "
             "classes.methods.header: getShortValue AND "
             "classes.methods.header: getRawValue AND "
             "classes.methods.header: getShortRawValue AND "
             "classes.methods.header: isSet AND "
             "classes.methods.header: isAllSet AND "
             "classes.methods.header: setValue AND "
             "classes.methods.header: setShortValue AND "
             "classes.methods.header: negate AND "
             "classes.methods.header: isTrue AND "
             "classes.methods.header: isNotTrue AND "
             "classes.methods.header: isFalse AND "
             "classes.methods.header: isNotFalse AND "
             "classes.methods.header: toBooleanObject AND "
             "classes.methods.header: toBoolean AND "
             "classes.methods.header: toBooleanDefaultIfNull AND "
             "classes.methods.header: toCharacterObject AND "
             "classes.methods.header: toChar AND "
             "classes.methods.header: toIntValue AND "
             "classes.methods.header: unicodeEscaped AND "
             "classes.methods.header: isAscii AND "
             "classes.methods.header: isAsciiPrintable AND "
             "classes.methods.header: isAsciiControl AND "
             "classes.methods.header: isAsciiAlpha AND "
             "classes.methods.header: getShortClassName AND "
             "classes.methods.header: getPackageName AND "
             "classes.methods.header: getAllSuperclasses AND "
             "classes.methods.header: getAllInterfaces AND "
             "classes.methods.header: convertClassNamesToClasses AND "
             "classes.methods.header: convertClassesToClassNames AND "
             "classes.methods.header: isAssignable AND "
             "classes.methods.header: primitiveToWrapper AND "
             "classes.methods.header: size AND "
             "classes.methods.header: isEmpty AND "
             "classes.methods.header: contains AND "
             "classes.methods.header: containsValue AND "
             "classes.methods.header: containsKey AND "
             "classes.methods.header: get AND "
             "classes.methods.header: put AND "
             "classes.methods.header: remove AND "
             "classes.methods.header: toLocale AND "
             "classes.methods.header: localeLookupList AND "
             "classes.methods.header: availableLocaleList AND "
             "classes.methods.header: availableLocaleSet AND "
             "classes.methods.header: isAvailableLocale AND "
             "classes.methods.header: languagesByCountry AND "
             "classes.methods.header: countriesByLanguage AND "
             "classes.methods.header: getCause AND "
             "classes.methods.header: getMessage AND "
             "classes.methods.header: getMessages AND "
             "classes.methods.header: getThrowable AND "
             "classes.methods.header: getThrowableCount AND "
             "classes.methods.header: getThrowables AND "
             "classes.methods.header: indexOfThrowable AND "
             "classes.methods.header: printStackTrace"
}}

query9 = {"query_string": {
    "query": "classes.name: NonExisting.class AND "
             "classes.name: BitField.class AND "
             "classes.name: BooleanUtils.class AND "
             "classes.name: CharUtils.class AND "
             "classes.name: ClassUtils.class AND "
             "classes.name: IntHashMap.class AND "
             "classes.name: LocaleUtils.class AND "
             "classes.name: NotImplementedException.class AND "

             "classes.methods.header: toString AND "
             "classes.methods.header: hashCode AND "
             "classes.methods.header: toMap AND "
             "classes.methods.header: clone AND "
             "classes.methods.header: subarray AND "
             "classes.methods.header: isSameLength AND "
             "classes.methods.header: indexOf AND "
             "classes.methods.header: toPrimitive AND "
             "classes.methods.header: getValue AND "
             "classes.methods.header: getShortValue AND "
             "classes.methods.header: getRawValue AND "
             "classes.methods.header: getShortRawValue AND "
             "classes.methods.header: isSet AND "
             "classes.methods.header: isAllSet AND "
             "classes.methods.header: setValue AND "
             "classes.methods.header: setShortValue AND "
             "classes.methods.header: negate AND "
             "classes.methods.header: isTrue AND "
             "classes.methods.header: isNotTrue AND "
             "classes.methods.header: isFalse AND "
             "classes.methods.header: isNotFalse AND "
             "classes.methods.header: toBooleanObject AND "
             "classes.methods.header: toBoolean AND "
             "classes.methods.header: toBooleanDefaultIfNull AND "
             "classes.methods.header: toCharacterObject AND "
             "classes.methods.header: toChar AND "
             "classes.methods.header: toIntValue AND "
             "classes.methods.header: unicodeEscaped AND "
             "classes.methods.header: isAscii AND "
             "classes.methods.header: isAsciiPrintable AND "
             "classes.methods.header: isAsciiControl AND "
             "classes.methods.header: isAsciiAlpha AND "
             "classes.methods.header: getShortClassName AND "
             "classes.methods.header: getPackageName AND "
             "classes.methods.header: getAllSuperclasses AND "
             "classes.methods.header: getAllInterfaces AND "
             "classes.methods.header: convertClassNamesToClasses AND "
             "classes.methods.header: convertClassesToClassNames AND "
             "classes.methods.header: isAssignable AND "
             "classes.methods.header: primitiveToWrapper AND "
             "classes.methods.header: size AND "
             "classes.methods.header: isEmpty AND "
             "classes.methods.header: contains AND "
             "classes.methods.header: containsValue AND "
             "classes.methods.header: containsKey AND "
             "classes.methods.header: get AND "
             "classes.methods.header: put AND "
             "classes.methods.header: remove AND "
             "classes.methods.header: toLocale AND "
             "classes.methods.header: localeLookupList AND "
             "classes.methods.header: availableLocaleList AND "
             "classes.methods.header: availableLocaleSet AND "
             "classes.methods.header: isAvailableLocale AND "
             "classes.methods.header: languagesByCountry AND "
             "classes.methods.header: countriesByLanguage AND "
             "classes.methods.header: getCause AND "
             "classes.methods.header: getMessage AND "
             "classes.methods.header: getMessages AND "
             "classes.methods.header: getThrowable AND "
             "classes.methods.header: getThrowableCount AND "
             "classes.methods.header: getThrowables AND "
             "classes.methods.header: indexOfThrowable AND "
             "classes.methods.header: printStackTrace"
}}

elastic_query_list = [query1, query2, query3, query4, query5, query6, query7, query8, query9]
